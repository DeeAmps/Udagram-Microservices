version: "3"

volumes:
  db-data:
services:
  udagram-reverseproxy:
      build: 
        context: ../../proxy
        dockerfile: Dockerfile
      ports:
          - 8000:80
      restart: always
      depends_on:
        - udagram-user-service
        - udagram-feed-service     
  udagram-user-service:
    build: 
        context: ../../user-service
        dockerfile: Dockerfile
    environment:
      POSTGRESS_USERNAME: $POSTGRESS_USERNAME
      POSTGRESS_PASSWORD: $POSTGRESS_PASSWORD 
      POSTGRESS_DB: $POSTGRESS_DB 
      POSTGRESS_HOST: $POSTGRESS_HOST
      AWS_REGION: $AWS_REGION
      AWS_PROFILE: $AWS_PROFILE
      AWS_MEDIA_BUCKET: $AWS_MEDIA_BUCKET
      JWT_SECRET: $JWT_SECRET
  udagram-feed-service:
    build: 
        context: ../../feed-service
        dockerfile: Dockerfile
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      POSTGRESS_USERNAME: $POSTGRESS_USERNAME
      POSTGRESS_PASSWORD: $POSTGRESS_PASSWORD 
      POSTGRESS_DB: $POSTGRESS_DB 
      POSTGRESS_HOST: $POSTGRESS_HOST
      AWS_REGION: $AWS_REGION
      AWS_PROFILE: $AWS_PROFILE
      AWS_MEDIA_BUCKET: $AWS_MEDIA_BUCKET
      JWT_SECRET: $JWT_SECRET
  frontend:
    build: 
        context: ../../frontend
        dockerfile: Dockerfile
    links:
      - "udagram-reverseproxy"
    ports:
      - "8100:80"